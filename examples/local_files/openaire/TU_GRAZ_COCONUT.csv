"doi","id","subject","title","authors","year","publisher","resulttype","language","journal","url","paper_abstract","project_id","accessright","x","y","area_uri","cluster_labels","area","cited_by_tweeters_count","readers.mendeley","citation_count","readers","file_hash"
"","od________18::98c7a6f16ab04f3d565f01f8b98c14e7","Computer Science - Artificial Intelligence","Algorithms for Weighted Boolean Optimization","Manquinho, Vasco","2009-03-04","","publication","","","","The Pseudo-Boolean Optimization (PBO) and Maximum Satisfiability (MaxSAT) problems are natural optimization extensions of Boolean Satisfiability (SAT). In the recent past, different algorithms have been proposed for PBO and for MaxSAT, despite the existence of straightforward mappings from PBO to MaxSAT and vice-versa. This papers proposes Weighted Boolean Optimization (WBO), a new unified framework that aggregates and extends PBO and MaxSAT. In addition, the paper proposes a new unsatisfiability-based algorithm for WBO, based on recent unsatisfiability-based algorithms for MaxSAT. Besides standard MaxSAT, the new algorithm can also be used to solve weighted MaxSAT and PBO, handling pseudo-Boolean constraints either natively or by translation to clausal form. Experimental results illustrate that unsatisfiability-based algorithms for MaxSAT can be orders of magnitude more efficient than existing dedicated algorithms. Finally, the paper illustrates how other algorithms for either PBO or MaxSAT can be extended to WBO.","76572","Open Access","-0.6506","0.271","15","Computer science - artificial intelligence, Boolean optimization","Computer science - artificial intelligence, Boolean optimization",NA,NA,NA,"",""
"","od______1249::0612c1ae31ef79248b07029848c0befa","Boolean","TG-Pro: a SAT-based ATPG system, system description","Chen, Huan","2012-01-01","IOS Press","publication","","","","peer-reviewed
			Automatic Test Pattern Generation (ATPG) is arguably one of the practical applications
			that motivated the development of modern Boolean Satisfiability (SAT) solvers in
			the mid 90s. Despite the interest of using SAT in ATPG, the original model remained
			mostly unchanged for nearly two decades, even in the presence of renewed interest in applying modern SAT technology to large-scale hardware designs. This paper describes the SAT-based ATPG system TG-Pro. In contrast to all SAT-based ATPG work over the last two decades, TG-Pro is based on a new fundamentally different SAT-based ATPG model. Experimental results, obtained on well-known and publicly available benchmarks, demonstrate that TG-Pro achieves major performance improvements over other well-established SAT-based ATPG models.","217069","Open Access","-0.2435","0.659","11","Model checking","Model checking",NA,NA,NA,"",""
"","od________18::5ec3b2d94b5aa10c1519ae7a2e673d56","TheoryofComputation_MATHEMATICALLOGICANDFORMALLANGUAGES","Industrial-Strength Formally Certified SAT Solving","Darbari, Ashish","2009-11-09","","publication","","","","Boolean Satisfiability (SAT) solvers are now routinely used in the verification of large industrial problems. However, their application in safety-critical domains such as the railways, avionics, and automotive industries requires some form of assurance for the results, as the solvers can (and sometimes do) have bugs. Unfortunately, the complexity of modern, highly optimized SAT solvers renders impractical the development of direct formal proofs of their correctness. This paper presents an alternative approach where an untrusted, industrial-strength, SAT solver is plugged into a trusted, formally certified, SAT proof checker to provide industrial-strength certified SAT solving. The key novelties and characteristics of our approach are (i) that the checker is automatically extracted from the formal development, (ii), that the combined system can be used as a standalone executable program independent of any supporting theorem prover, and (iii) that the checker certifies any SAT solver respecting the agreed format for satisfiability and unsatisfiability claims. The core of the system is a certified checker for unsatisfiability claims that is formally designed and verified in Coq. We present its formal design and outline the correctness proofs. The actual standalone checker is automatically extracted from the the Coq development. An evaluation of the certified checker on a representative set of industrial benchmarks from the SAT Race Competition shows that, albeit it is slower than uncertified SAT checkers, it is significantly faster than certified checkers implemented on top of an interactive theorem prover.","217069","Open Access","0.0254","0.6874","9","Certified sat solving, Industrial strength, Proof checking","Certified sat solving, Industrial strength, Proof checking",NA,NA,NA,"",""
"10.1002/rnc.2914","webcrawl____::466fc6a7180c91a3174e61d2f36bd8a2","systems ariadne;assume guarantee;guarantee verification","Assume-guarantee verification of nonlinear hybrid systems with ARIADNE","Benvenuti, Luca","2014-01-01","WILEY-BLACKWELL","publication","","INTERNATIONAL JOURNAL OF ROBUST AND NONLINEAR CONTROL","","","217069","Closed Access","0.676","0.2979","8","Assume guarantee, Dense orderings, Guarantee verification","Assume guarantee, Dense orderings, Guarantee verification","1","3","14","",""
"10.1007/978-0-387-09661-2_18","ec_fp7_ict__::9234328b7a47c30f83fef4629fda1959","abstract rtos;annotation technique; efficient","An efficient time annotation technique in abstract RTOS simulations for multiprocessor task migration","Zabel H.","2008-01-01","","publication","","","","","217069","Closed Access","-0.1603","-0.5886","2","Abstract rtos, Annotation technique, Fault simulation","Abstract rtos, Annotation technique, Fault simulation",NA,NA,"2","",""
"10.1007/978-3-540-73099-6_8","ec_fp7_ict__::637dd1fee935f7b16cd3c4c680067753","dense orderings;logics subinterval;structures dense","Tableau systems for logics of subinterval structures over dense orderings","#N/D","2007-01-01","","publication","","","","","217069","Closed Access","-0.6452","-0.3909","8","Assume guarantee, Dense orderings, Guarantee verification","Assume guarantee, Dense orderings, Guarantee verification",NA,NA,"3","",""
"10.1007/978-3-540-78800-3_30","dedup_wf_001::ba2563a9861cd01cd4d0133df4c28a8c","TheoryofComputation_MATHEMATICALLOGICANDFORMALLANGUAGES","Efficient interpolant generation in satisfiability modulo theories","Cimatti A.","2008-01-01","","publication","","","http://eprints.biblio.unitn.it/1410/1/DIT%2D07%2D075.pdf","The problem of computing Craig Interpolants for propositional (SAT) formulas has recently received a lot of interest, mainly for its applications in formal verification. However, propositional logic is often not expressive enough for representing many interesting verification problems, which can be more naturally addressed in the framework of Satisfiability Modulo Theories, SMT. Although {some} works have addressed the topic of generating interpolants in SMT, the techniques and tools that are currently available have some limitations, and their performance still does not exploit the full power of current state-of-the-art SMT solvers. In this paper we try to close this gap. We present several techniques for interpolant generation in SMT which overcome the limitations of the current generators mentioned above, and which take full advantage of state-of-the-art SMT technology. These novel techniques can lead to substantial performance improvements wrt. the currently available tools. We support our claims with an extensive experimental evaluation of our implementation of the proposed techniques in the MathSAT SMT solver.","217069","Open Access","-0.0655","0.3795","3","Satisfiability modulo theories, Computing backbones, Costs foundations","Satisfiability modulo theories, Computing backbones, Costs foundations",NA,NA,"21","",""
"10.1007/978-3-540-79719-7_21","dedup_wf_001::14a66252a25aa80b3e7b50890dd63660","based maximum; effective;effective unsatisfiability","Towards more effective unsatisfiability-based maximum satisfiability algorithms","Marques-Silva J.","2008-01-01","","publication","","","https://eprints.soton.ac.uk/265228/1/jpms-sat08a.pdf","","217069","Open Access","-0.5906","0.0534","10","Boolean satisfiability, Based maximum, Effective unsatisfiability","Boolean satisfiability, Based maximum, Effective unsatisfiability",NA,NA,"7","",""
"10.1007/978-3-540-87603-8_34","dedup_wf_001::89cb6abe68283fb4a2f8a82ca538684b","TheoryofComputation_LOGICSANDMEANINGSOFPROGRAMS","Model Checking Event-B by Encoding into Alloy","Matos, Paulo J.","2008-05-21","s.n.","publication","","","https://eprints.soton.ac.uk/265893/1/0805.3256v2.pdf","As systems become ever more complex, verification becomes more main stream. Event-B and Alloy are two formal specification languages based on fairly different methodologies. While Event-B uses theorem provers to prove that invariants hold for a given specification, Alloy uses a SAT-based model finder. In some settings, Event-B invariants may not be proved automatically, and so the often difficult step of interactive proof is required. One solution for this problem is to validate invariants with model checking. This work studies the encoding of Event-B machines and contexts to Alloy in order to perform temporal model checking with Alloy's SAT-based engine.","EP/E012973/1","Open Access","0.3373","0.6371","11","Model checking","Model checking",NA,NA,"1","",""
"10.1007/978-3-540-87803-2_7","ec_fp7_ict__::28901b6627c5b289ae145f49142c5670","linear orders;logic linear;optimal tableaux","Optimal tableaux for right propositional neighborhood logic over linear orders","Bresolin D.","2008-01-01","","publication","","","","","217069","Closed Access","-0.687","-0.171","4","Linear orders, Logic linear, Logic trees","Linear orders, Logic linear, Logic trees",NA,NA,"2","",""
"10.1007/978-3-540-89439-1_1","dedup_wf_001::7720e3c3a22c9776834d5b741f0221a8","Computer Science - Artificial Intelligence","Symmetry Breaking for Maximum Satisfiability","Marques-Silva, Joao","2008-04-03","s.n.","publication","","","https://eprints.soton.ac.uk/266608/1/jpms-lpar08.pdf","Symmetries are intrinsic to many combinatorial problems including Boolean Satisfiability (SAT) and Constraint Programming (CP). In SAT, the identification of symmetry breaking predicates (SBPs) is a well-known, often effective, technique for solving hard problems. The identification of SBPs in SAT has been the subject of significant improvements in recent years, resulting in more compact SBPs and more effective algorithms. The identification of SBPs has also been applied to pseudo-Boolean (PB) constraints, showing that symmetry breaking can also be an effective technique for PB constraints. This paper extends further the application of SBPs, and shows that SBPs can be identified and used in Maximum Satisfiability (MaxSAT), as well as in its most well-known variants, including partial MaxSAT, weighted MaxSAT and weighted partial MaxSAT. As with SAT and PB, symmetry breaking predicates for MaxSAT and variants are shown to be effective for a representative number of problem domains, allowing solving problem instances that current state of the art MaxSAT solvers could not otherwise solve.","217069","Open Access","-0.4208","0.541","15","Computer science - artificial intelligence, Boolean optimization","Computer science - artificial intelligence, Boolean optimization",NA,NA,"1","",""
"10.1007/978-3-642-12002-2_8","ec_fp7_ict__::e24619121ac411fcdc46a1fe0fe28aa7","costs foundations;foundations applications;modulo theory","Satisfiability modulo the theory of costs: Foundations and applications","Cimatti A.","2010-01-01","","publication","","","","","217069","Closed Access","0.0406","0.0763","3","Satisfiability modulo theories, Computing backbones, Costs foundations","Satisfiability modulo theories, Computing backbones, Costs foundations",NA,NA,"8","",""
"10.1007/978-3-642-13464-7_13","dedup_wf_001::4930f3272966deb19d317f87366b10d8","Computer Science::Formal Languages and Automata Theory","Model Checking of Hybrid Systems Using Shallow Synchronization","Bu, Lei","2010-01-01","Springer","publication","","","https://hal.inria.fr/hal-01055156/document","International audience; Hybrid automata are a widely accepted modeling framework for systems with discrete and continuous variables. The traditional semantics of a network of automata is based on interleaving, and requires the construction of a monolithic hybrid automaton based on the composition of the automata. This destroys the structure of the network and results in a loss of efficiency, especially using bounded model checking techniques. An alternative compositional semantics, called \"shallow synchronization\", exploits the locality of transitions and relaxes time synchronization. The semantics is obtained by composing traces of the local automata, and superimposing compatibility constraints resulting from synchronization. In this paper, we investigate the different symbolic encodings of the reachability problem of a network of hybrid automata. We propose a novel encoding based on the shallow synchronization semantics, which allows different strategies for searching local paths that can be synchronized. We implemented a bounded reachability search based on the use of an incremental Satisfiability-Modulo-Theory solver. The experimental results confirm that the new encoding often performs better than the one based on interleaving.","217069","Open Access","0.3981","0.5255","11","Model checking","Model checking",NA,NA,"1","",""
"10.1007/978-3-642-14295-6_36","dedup_wf_001::3c16c056889d883e28fc1a31d82d8b22","004 Data processing & computer science","Robustness in the presence of liveness","Bloem, Roderick","2010-01-01","","publication","","","http://repository.ist.ac.at/54/1/Robustness_in_the_presence_of_liveness.pdf","Systems ought to behave reasonably even in circumstances that are not anticipated in their specifications. We propose a definition of robustness for liveness specifications which prescribes, for any number of environment assumptions that are violated, a minimal number of system guarantees that must still be fulfilled. This notion of robustness can be formulated and realized using a Generalized Reactivity formula. We present an algorithm for synthesizing robust systems from such formulas. For the important special case of Generalized Reactivity formulas of rank 1, our algorithm improves the complexity of [PPS06] for large specifications with a small number of assumptions and guarantees.","217069","Open Access","-0.1811","-0.3253","8","Assume guarantee, Dense orderings, Guarantee verification","Assume guarantee, Dense orderings, Guarantee verification",NA,NA,"12","",""
"10.1007/978-3-642-14808-8_18","ec_fp7_ict__::bba66d450d8e2a1f4e6fad463676d77e","certified sat;industrial strength;proof checking","Industrial-strength certified SAT solving through verified SAT proof checking","Darbari A.","2010-01-01","","publication","","","","","217069","Closed Access","0.1513","0.6478","9","Certified sat solving, Industrial strength, Proof checking","Certified sat solving, Industrial strength, Proof checking",NA,NA,"13","",""
"10.1007/s10472-009-9152-7","dedup_wf_001::06d7beb67a5f20fa9f9d2a323f52b270","Q360 Information Theory","Delayed theory combination vs. Nelson-Oppen for satisfiability modulo theories: a comparative analysis","Bruttomesso, Roberto","2009-01-01","SPRINGER","publication","","ANNALS OF MATHEMATICS AND ARTIFICIAL INTELLIGENCE","http://eprints.biblio.unitn.it/1445/1/dtr%2D08%2D028.pdf","Most state-of-the-art approaches for Satisfiability Modulo Theory (SMT(T)) rely on the integration between a SAT solver and a decision procedure for sets of literals in the background theory T (T-solver). Often T is the combination (T1 U T2) of two (or more) simpler theories (SMT(T1 U T2)), s.t. the specific Ti-Solvers must be combined. Up to a few years ago, the standard approach to SMT(T1 U T2) was to integrate the SAT solver with one combined (T1 U T2)-solver, obtained from two distinct Ti-Solvers by means of evolutions of Nelson and Oppen's (NO) combination procedure, in which the Ti-Solvers deduce and exchange interface equalities. Nowadays many state-of-the-art SMT solvers use evolutions of a more recent SMT(T1 U T2) procedure called Delayed Theory Combination (DTC), in which each Ti-Solver interacts directly and only with the SAT solver, in such a way that part or all of the (possibly very expensive) reasoning effort on interface equalities is delegated to the SAT solver itself. In this paper we present a comparative analysis of DTC vs. NO for SMT(T1 U T2). On the one hand, we explain the advantages of DTC in exploiting the power of modern SAT solvers to reduce the search. On the other hand, we show that the extra amount of Boolean search required to the SAT solver can be controlled. In fact, we prove two novel theoretical results, for both convex and non-convex theories and for different deduction capabilities of the Ti-Solvers, which relate the amount of extra Boolean search required to the SAT solver by DTC with the number of deductions and case-splits required to the Ti-Solvers by NO in order to perform the same tasks: (i) under the same hypotheses of deduction capabilities of the Ti-Solvers required by NO, DTC causes no extra Boolean search; (ii) using Ti-Solvers with limited or no deduction capabilities, the amount of extra Boolean search required can be reduced down to a negligible amount by controlling the quality of the T-conflict sets returned by the T-solvers. ","217069","Open Access","-0.1061","0.6492","3","Satisfiability modulo theories, Computing backbones, Costs foundations","Satisfiability modulo theories, Computing backbones, Costs foundations",NA,NA,"3","",""
"10.1007/s10472-011-9233-2","dedup_wf_001::946fed90f4f52519ead8c1767f914f85","Boolean optimization","Boolean lexicographic optimization: algorithms & applications","Marques-Silva, Joao","2011-01-01","SPRINGER","publication","","ANNALS OF MATHEMATICS AND ARTIFICIAL INTELLIGENCE","","Multi-Objective Combinatorial Optimization (MOCO) problems find a
			wide range of practical application problems, some of which involving Boolean
			variables and constraints. This paper develops and evaluates algorithms for solving
			MOCO problems, defined on Boolean domains, and where the optimality criterion
			is lexicographic. The proposed algorithms build on existing algorithms for either
			Maximum Satisfiability (MaxSAT), Pseudo-Boolean Optimization (PBO), or Integer
			Linear Programming (ILP). Experimental results, obtained on problem instances
			from haplotyping with pedigrees and software package dependencies, show that
			the proposed algorithms can provide significant performance gains over state of
			the art MaxSAT, PBO and ILP algorithms. Finally, the paper also shows that
			lexicographic optimization conditions are observed in the majority of the problem
			instances from the MaxSAT evaluations, motivating the development of dedicated
			algorithms that can exploit lexicographic optimization conditions in general MaxSAT
			problem instances.
			This work was partially funded by SFI PI Grant 09/IN.1/I2618, EU grants FP7-ICT-217069 and FP7-ICT-214898, FCT grant ATTEST (CMU-PT/ELE/0009/2009), FCT PhD grant SFRH/BD/ 28599/2006, CICYT Projects TIN2009-14704-C03-01 and TIN2010-20967-C04-03, and by INESC-ID multiannual funding from the PIDDAC program funds.","217069","Restricted","-0.5577","0.3002","15","Computer science - artificial intelligence, Boolean optimization","Computer science - artificial intelligence, Boolean optimization",NA,NA,"8","",""
"10.1007/s10601-008-9058-8","dedup_wf_001::f3eda48a67fc9a7743788d5585bd7caa","algorithm extracting;bound algorithm; branch","A branch and bound algorithm for extracting smallest minimal unsatisfiable subformulas","Liffiton, Mark","2009-01-01","SPRINGER","publication","","CONSTRAINTS","","","217069","Closed Access","-0.4542","-0.3951","7","Algorithms applications, Bound algorithm, Minimal unsatisfiability","Algorithms applications, Bound algorithm, Minimal unsatisfiability",NA,NA,"16","",""
"10.1007/s10836-011-5209-8","webcrawl____::ba9a5075e53082e36aa3e7cf1a6a0068","backjumping extended;efficient generation;extended fsms","Efficient Generation of Stimuli for Functional Verification by Backjumping Across Extended FSMs","Di Guglielmo, Giuseppe","2011-01-01","SPRINGER","publication","","JOURNAL OF ELECTRONIC TESTING-THEORY AND APPLICATIONS","","","217069","Closed Access","0.2493","-0.6625","13","Efficient generation, Efsm traversing, Extended fsms","Efficient generation, Efsm traversing, Extended fsms",NA,NA,"4","",""
"10.1016/j.jalgor.2008.02.007","dedup_wf_001::5a7f5852d874b9e1c5458a93f5bddd45","checking boolean;model checking","Model checking with Boolean Satisfiability","Marques-Silva J.","2008-01-01","","publication","","Journal of Algorithms","https://eprints.soton.ac.uk/265229/1/jpms-jalgor08-prelim.pdf","","217069","Open Access","-0.3409","0.092","10","Boolean satisfiability, Based maximum, Effective unsatisfiability","Boolean satisfiability, Based maximum, Effective unsatisfiability",NA,NA,"1","",""
"10.1016/j.jcss.2011.08.007","dedup_wf_001::693797b677d8b7b8130136589405b9e1","Applied Mathematics","Synthesis of Reactive(1) designs","Bloem, Roderick","2012-01-01","ACADEMIC PRESS INC ELSEVIER SCIENCE","publication","","JOURNAL OF COMPUTER AND SYSTEM SCIENCES","","","217069","Open Access","-0.2308","-0.7459","14","Aware refinement, Based hw, Sw designs","Aware refinement, Based hw, Sw designs",NA,NA,"99","",""
"10.1109/date.2010.5456965","ec_fp7_ict__::7fc6137c011b0b1898686ff59bf5f10b","aware refinement;based hw;sw designs","RTOS-aware refinement for TLM2.0-based HW/SW designs","#N/D","2010-01-01","","publication","","","","","217069","Closed Access","0.4955","-0.5311","14","Aware refinement, Based hw, Sw designs","Aware refinement, Based hw, Sw designs",NA,NA,"8","",""
"10.1109/date.2010.5457130","ec_fp7_ict__::4b0a5f0069dbcccc8a63053b904bc3f5","assertion based;based verification;rtos properties","Assertion-based verification of RTOS properties","#N/D","2010-01-01","","publication","","","","","217069","Closed Access","0.441","-0.264","12","Assertion based, Based verification, Dependent software","Assertion based, Based verification, Dependent software",NA,NA,"1","",""
"10.1109/date.2010.5457158","ec_fp7_ict__::d4a412e2768d3a78b6c4f65b3559a2f0","analysis property;mutation checkers;property qualification","Vacuity analysis for property qualification by mutation of checkers","#N/D","2010-01-01","","publication","","","","","217069","Closed Access","0.5772","-0.3586","1","Decision diagrams, High level, Property qualification","Decision diagrams, High level, Property qualification",NA,NA,"3","",""
"10.1109/ecbs.2010.24","dedup_wf_001::718195b77c6044b5ac0e0f58045f044a","Computer Science - Software Engineering","Continuous Verification of Large Embedded Software using SMT-Based Bounded Model Checking","Cordeiro, Lucas","2009-11-19","s.n.","publication","","","https://eprints.soton.ac.uk/268401/1/ecbs2010-cordeiro.pdf","The complexity of software in embedded systems has increased significantly over the last years so that software verification now plays an important role in ensuring the overall product quality. In this context, bounded model checking has been successfully applied to discover subtle errors, but for larger applications, it often suffers from the state space explosion problem. This paper describes a new approach called continuous verification to detect design errors as quickly as possible by exploiting information from the software configuration management system and by combining dynamic and static verification to reduce the state space to be explored. We also give a set of encodings that provide accurate support for program verification and use different background theories in order to improve scalability and precision in a completely automatic way. A case study from the telecommunications domain shows that the proposed approach improves the error-detection capability and reduces the overall verification time by up to 50%.","217069","Open Access","0.3937","0.2097","6","Based bounded model, Bounded model checking, Smt based bounded","Based bounded model, Bounded model checking, Smt based bounded",NA,NA,"2","",""
"10.1109/fmcad.2009.5351147","dedup_wf_001::413cff7d54625472265c44133bc660f0","Computer Science - Programming Languages","Software Model Checking via Large-Block Encoding","Beyer, Dirk","2009-04-29","","publication","","","http://eprints.biblio.unitn.it/1614/1/026.pdf","The construction and analysis of an abstract reachability tree (ART) are the basis for a successful method for software verification. The ART represents unwindings of the control-flow graph of the program. Traditionally, a transition of the ART represents a single block of the program, and therefore, we call this approach single-block encoding (SBE). SBE may result in a huge number of program paths to be explored, which constitutes a fundamental source of inefficiency. We propose a generalization of the approach, in which transitions of the ART represent larger portions of the program; we call this approach large-block encoding (LBE). LBE may reduce the number of paths to be explored up to exponentially. Within this framework, we also investigate symbolic representations: for representing abstract states, in addition to conjunctions as used in SBE, we investigate the use of arbitrary Boolean formulas; for computing abstract-successor states, in addition to Cartesian predicate abstraction as used in SBE, we investigate the use of Boolean predicate abstraction. The new encoding leverages the efficiency of state-of-the-art SMT solvers, which can symbolically compute abstract large-block successors. Our experiments on benchmark C programs show that the large-block encoding outperforms the single-block encoding.","217069","Open Access","0.5126","0.4298","11","Model checking","Model checking",NA,NA,"31","",""
"10.1109/hldvt.2008.4695887","ec_fp7_ict__::88d86d18a82589c2e7f70a95368b78d4","parallel simulation; role;role parallel","The role of parallel simulation in functional verification","Di Guglielmo G.","2008-01-01","","publication","","","","","217069","Closed Access","0.0871","-0.5843","2","Abstract rtos, Annotation technique, Fault simulation","Abstract rtos, Annotation technique, Fault simulation",NA,NA,"0","",""
"10.1109/hldvt.2010.5496644","ec_fp7_ict__::068b87cb862e00292d67d6dc9b039d8b","dependent software;hardware dependent;properties hardware","Verification of real-time properties for hardware-dependent software","Mueller W.","2010-01-01","","publication","","","","","217069","Closed Access","0.527","-0.1329","12","Assertion based, Based verification, Dependent software","Assertion based, Based verification, Dependent software",NA,NA,"1","",""
"10.1109/hldvt.2010.5496652","ec_fp7_ict__::9a7a3c02f9b03eb830fc4aa3e0f614fb","automatic synthesis;based ips;bus based","Automatic synthesis of OSCI TLM-2.0 models into RTL bus-based IPs","Bombieri N.","2010-01-01","","publication","","","","","217069","Closed Access","0.6598","0.0809","5","Automatic synthesis, Based ips, Bus based","Automatic synthesis, Based ips, Bus based",NA,NA,"3","",""
"10.1109/hldvt.2010.5496660","ec_fp7_ict__::5d738bc378e8623d7023708e58c6796c","efsm traversing;formal functional;traversing nusmv","Semi-formal functional verification by EFSM traversing via NuSMV","Di Guglielmo G.","2010-01-01","","publication","","","","","217069","Closed Access","0.3214","-0.4755","13","Efficient generation, Efsm traversing, Extended fsms","Efficient generation, Efsm traversing, Extended fsms",NA,NA,"9","",""
"10.1109/ismvl.2010.11","ec_fp7_ict__::73ae63b77ad9d19c03aeb70ae97c26b0","algorithms applications;minimal unsatisfiability;models algorithms","Minimal unsatisfiability: Models, algorithms & applications","Marques-Silva J.","2010-01-01","","publication","","","","","217069","Closed Access","-0.0738","-0.0813","7","Algorithms applications, Bound algorithm, Minimal unsatisfiability","Algorithms applications, Bound algorithm, Minimal unsatisfiability",NA,NA,"6","",""
"10.1109/latw.2010.5550336","ec_fp7_ict__::ea2bb25c26fc8911acdbe24239ff526d","analysis high;decision diagrams;high level","Mutation analysis with high-level decision diagrams","Hantson H.","2010-01-01","","publication","","","","","217069","Closed Access","0.6811","-0.2882","1","Decision diagrams, High level, Property qualification","Decision diagrams, High level, Property qualification",NA,NA,"1","",""
"10.1109/memcod.2008.4547683","ec_fp7_ict__::0dbd670e587bb8937429752c19c6e7b9","analysis fault;fault simulation","Vacuity analysis by fault simulation","Guglielmo L.D.","2008-01-01","","publication","","","","","217069","Closed Access","0.0099","-0.6884","2","Abstract rtos, Annotation technique, Fault simulation","Abstract rtos, Annotation technique, Fault simulation",NA,NA,"2","",""
"10.1109/tcad.2008.2003303","dedup_wf_001::72ab5974d0c3720300be64a8d9226d39","compilation psl;symbolic compilation","Symbolic compilation of PSL","Cimatti, Alessandro","2008-01-01","IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC","publication","","IEEE TRANSACTIONS ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS","","","217069","Closed Access","-0.4273","-0.5804","2","Abstract rtos, Annotation technique, Fault simulation","Abstract rtos, Annotation technique, Fault simulation",NA,NA,"10","",""
"10.1109/time.2008.17","ec_fp7_ict__::59cee73ca25d5287fde6e4e21f7cad7c","logic trees; optimal;optimal tableau","An optimal tableau for right propositional neighborhood logic over trees","Bresolin D.","2008-01-01","","publication","","","","","217069","Closed Access","-0.6596","-0.2222","4","Linear orders, Logic linear, Logic trees","Linear orders, Logic linear, Logic trees",NA,NA,"2","",""
"10.1109/tse.2011.59","dedup_wf_001::624fcddd5c43c0640b512efcf87478a2","model checking","SMT-Based Bounded Model Checking for Embedded ANSI-C Software","Cordeiro, Lucas","2012-01-01","IEEE COMPUTER SOC","publication","","IEEE TRANSACTIONS ON SOFTWARE ENGINEERING","https://eprints.soton.ac.uk/267593/1/SMT-Based_CBMC.pdf","peer-reviewed
			Propositional bounded model checking has been applied successfully to verify embedded software but remains limited by
			increasing propositional formula sizes and the loss of high-level information during the translation preventing potential optimizations
			to reduce the state space to be explored. These limitations can be overcome by encoding high-level information in theories richer
			than propositional logic and using SMT solvers for the generated verification conditions. Here, we propose the application of different
			background theories and SMT solvers to the verification of embedded software written in ANSI-C in order to improve scalability and
			precision in a completely automatic way. We have modified and extended the encodings from previous SMT-based bounded model
			checkers to provide more accurate support for variables of finite bit width, bit-vector operations, arrays, structures, unions and pointers.
			We have integrated the CVC3, Boolector, and Z3 solvers with the CBMC front-end and evaluated them using both standard software
			model checking benchmarks and typical embedded software applications from telecommunications, control systems, and medical
			devices. The experiments show that our ESBMC model checker can analyze larger problems than existing tools and substantially
			reduce the verification time.","EP/E012973/1","Open Access","0.2568","0.29","6","Based bounded model, Bounded model checking, Smt based bounded","Based bounded model, Bounded model checking, Smt based bounded",NA,NA,"41","",""
"10.1109/wodes.2008.4605925","dedup_wf_001::ec8974c67b937decde7528f4b9a48216","applications boolean;practical applications","Practical applications of boolean satisfiability","Marques-Silva J.","2008-01-01","","publication","","","https://eprints.soton.ac.uk/265340/1/jpms-wodes08.pdf","","217069","Open Access","-0.443","0.0307","10","Boolean satisfiability, Based maximum, Effective unsatisfiability","Boolean satisfiability, Based maximum, Effective unsatisfiability",NA,"61","20","",""
"10.1142/s021821301250025x","webcrawl____::b7b470a19827cb1f48e8fd18e45032a4","algorithms boolean;hybrid incremental;incremental algorithms","HYBRID INCREMENTAL ALGORITHMS FOR BOOLEAN SATISFIABILITY","Letombe, Florian","2012-01-01","WORLD SCIENTIFIC PUBL CO PTE LTD","publication","","INTERNATIONAL JOURNAL ON ARTIFICIAL INTELLIGENCE TOOLS","","","EP/E012973/1","Closed Access","-0.5613","0.4201","10","Boolean satisfiability, Based maximum, Effective unsatisfiability","Boolean satisfiability, Based maximum, Effective unsatisfiability",NA,NA,"0","",""
"10.1145/1837274.1837283","dedup_wf_001::c86899beba4529b5a397e653c77745db","abstraction rtl;embedded software;ips embedded","Abstraction of RTL Ips into embedded software","Bombieri N.","2010-01-01","","publication","","","","","217069","Closed Access","0.6699","-0.0243","5","Automatic synthesis, Based ips, Bus based","Automatic synthesis, Based ips, Bus based",NA,NA,"6","",""
"10.1145/1838552.1838559","dedup_wf_001::50375a3fc9ef4057e3399d4725582b3b","Computer Science - Logic in Computer Science","Efficient Generation of Craig Interpolants in Satisfiability Modulo Theories","Cimatti, Alessandro","2010-01-01","ASSOC COMPUTING MACHINERY","publication","","ACM TRANSACTIONS ON COMPUTATIONAL LOGIC","","The problem of computing Craig Interpolants has recently received a lot of interest. In this paper, we address the problem of efficient generation of interpolants for some important fragments of first order logic, which are amenable for effective decision procedures, called Satisfiability Modulo Theory solvers. We make the following contributions. First, we provide interpolation procedures for several basic theories of interest: the theories of linear arithmetic over the rationals, difference logic over rationals and integers, and UTVPI over rationals and integers. Second, we define a novel approach to interpolate combinations of theories, that applies to the Delayed Theory Combination approach. Efficiency is ensured by the fact that the proposed interpolation algorithms extend state of the art algorithms for Satisfiability Modulo Theories. Our experimental evaluation shows that the MathSAT SMT solver can produce interpolants with minor overhead in search, and much more efficiently than other competitor solvers.","217069","Open Access","-0.1787","0.3397","3","Satisfiability modulo theories, Computing backbones, Costs foundations","Satisfiability modulo theories, Computing backbones, Costs foundations",NA,NA,"18","",""
"10.3233/978-1-60750-606-5-15","ec_fp7_ict__::2862696941fff2ac38f16c14c6f13a23","backbones propositional; computing;computing backbones","On computing backbones of propositional theories","Marques-Silva J.","2010-01-01","","publication","","","","","217069","Closed Access","0.1671","-0.1076","3","Satisfiability modulo theories, Computing backbones, Costs foundations","Satisfiability modulo theories, Computing backbones, Costs foundations",NA,NA,"","",""
